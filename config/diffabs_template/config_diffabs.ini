[Beamline_setup]
name = "DIFFABS"
cen = [80,305]
sdd = 900
energy = 7.9
pix_size = [0.13, 0.13]

[Sample_info]
substrate = "Au(111)"
film_material_cif = "Co3O4.cif"
ph = 13

[UB_setup]
lattice_constants=[2.8837,2.8837,7.0636,90,90,120]
incident_angle = 9
#angle=[omega_t, gamma, delta, mu,chi,phi]
or0_angles=[9.982,0,19.965,0,90,0]
or1_angles=[0.4,7.61,13.63,-38,0,0]
or0_hkl= [0,0,4.54]
or1_hkl=[0.0,-0.5045,2.5225]

[Data_storage]
data_keys=['potential','current_density','Time','pcov_ip',\
           'pcov_oop','cen_ip','FWHM_ip', 'amp_ip', 'lfrac_ip',\
           'bg_slope_ip','bg_offset_ip','cen_oop','FWHM_oop',\
           'amp_oop','lfrac_oop','bg_slope_oop','bg_offset_oop']
data_keys_pd = ['scan_cycle', 'potential_RHE', 'current_density',\
                'ip_strain', 'oop_strain', 'ip_size', 'oop_size']

[Scan_setup]
debug = 0
debug_img = 0
live_image = 1
scan_nos = [267]
hkl = [1, 1, 1]
frame_prefix="XRD-XAS_Co"
boost_mapping = False
l_scan=True
#is it a potential step scan
is_zap_scan = False
#How is the file saved?
#normal_save_format = True : save fio file and one nxs file for each frame
#normal_save_format = False: no fio file, one nxs file for all frames
#At this moment, pot step data is saved in two different formates, which should be avoided in future!!
normal_save_format = False
spec_file_head = '/home/qiu/data/beamtime/P23_11_18_I20180114/raw/startup'
img_path = '/Users/cqiu/app/diffabs'
motor_angles = dict (zip (['phi','chi','mu','delta','gamma','omega_t'],[0, 90,0, 19.9955, 1.12, 9.7]))
time_step = [10, 100, 100]
pot_step = [0.3, 1.2, 0.3]
save_all_frames = 0

[Fit_setup]
#the small integration window size(num of pix from one side. Smaller more reliable but worse statistics)
#fit boundaries for ip and oop cuts, you need to play with it a bit
#(x0, FWHM, area, lfrac, bg_slope, bg_offset)
#bounds for ip
bounds_ip = [[1.20, 0.0050, 0, 0, -100000, -1e6],[1.45, 0.22, 1e5, 1, 100000, 1e6]]
#bounds for oop
bounds_oop = [[0.04, 0.0050, 0, 0, -100000, -1e6],[0.12, 0.22, 1e5, 1, 100000, 1e6]]
guess_ip = [None, 0.21, 0.1, 0.5, 0, 0]
guess_oop = [None, 0.21, 0.1, 0.5, 0, 0]
#Cut and fit range for two-step peak-fitting processes, 
#First window should be big enough to cover the peak
#The first window use the detector center as the peak center for calculating fit range
#The second fit window use the peak center from the 1st step fit
cut_offset={'hor':[100,5],'ver':[150,5]}
data_range_offset={'hor':[110,110],'ver':[150,150]}
#cut_offset={'hor':[150,200, 5],'ver':[250,100, 5]}
#data_range_offset={'hor':[150,150,150],'ver':[250,150,150]}
#use the first fit results for the ip/oop position?
use_first_fit_for_pos = True

[Mask_point]
remove_pix = [[0,0]]
remove_columns = [0,1,2,-1,-2,-3]
remove_rows = [0,1,2,-1,-2,-3]
#equivalent to remove rows with q_ver between these range
remove_q_par = []
#equivalent to remove columns with q_par between these ranges
remove_q_ver = [[1.25,1.35]]
#eg line_strike_segments =[{'p1':[2.4,3.0],'p2':[2.55,3.3]},{'p1':[2.1,3.2],'p2'[2.75,3.5]}]
#each list item is a lib of two items with key=p1 and p2 without exception
#each list item define two ends of one line segment
#each point is of form [q_para, q_vert]
line_strike_segments = [{'p1':[2.4,3.2],'p2':[2.5,3.0]},{'p1':[2.4,3.0],'p2':[2.55,3.3]}]
#in pixel unit eg [10,10], make sure the length is the same as line_strike_segments
line_strike_width = []

[Image_setup]
vmax_2d_img=200
vmin_2d_img=0

[Func_keys]
get_UB = ['name','lattice_constants','energy','or0_angles','or1_angles','or0_hkl','or1_hkl']

