[Beamline_setup]
name = "P23"
#center pix [x, y], x counted from left to right, y counted from up to down
#How to get the prim beam center
#From the pixel image, you read the center at [x, y]
#Transpose the peak at [y, x]
#Do numpy.flip(axis=1), you will get [y, x+(hor_width/2-x)*2], where hor_width is the number of total pix in horizontal direction (516 for p23 line)
cen_full_image = [320,701]
#cen = [258, 664]
#sample detection distance in mm
sdd = 700
#energy in KeV
energy = 22.5
#pixel size in mm
pix_size = [0.055, 0.055]
#clipped image = original_img[ver[0]:ver[1],hor[0]:hor[1]]
clip_boundary_full_image = {"ver":[0,100000],"hor":[0,10000]}
#clip the image around center point in q unit
q_span_clip_hor = 0.1
q_span_clip_ver = 0.1

[Sample_info]
substrate = "Au(111)"
film_material_cif = "Co3O4.cif"
film_hkl_normal = [1,1,1]
film_hkl_x = [1,1,-2]

[UB_setup]
lattice_constants=[2.8837,2.8837,7.0636,90,90,120]
incident_angle = 0.34
#angle=[omega_t, gamma, delta, mu,0,0]
or0_angles=[0.4,15.4,22.43,-30.9,0,0]
or1_angles=[0.4,7.61,13.63,-38,0,0]
or0_hkl= [1.009,-1.009,4.0359]
or1_hkl=[0.0,-0.5045,2.5225]
ub=[-3.388904, -2.34687, 0.00424869, 0.000210428, -0.0104566, -0.889455, 2.48543, 0.905918, 0.00074013]

[Data_storage]
data_keys=['potential','potential_cal','current_density','peak_intensity','Time','pcov_ip',\
           'pcov_oop','cen_ip','FWHM_ip', 'amp_ip', 'lfrac_ip',\
           'bg_slope_ip','bg_offset_ip','cen_oop','FWHM_oop',\
           'amp_oop','lfrac_oop','bg_slope_oop','bg_offset_oop',\
           'peak_intensity_error','H','K','L','frame_number',\
           'phi','chi','mu', 'delta', 'gamma','omega_t','mon','transm','mask_cv_xrd','mask_ctr']
           
#data_keys=['potential','peak_intensity','peak_intensity_error','L','frame_number',\
#           'phi','chi','mu', 'delta', 'gamma','omega_t','mon','transm']

[Scan_setup]
debug = 0
debug_img = 9
live_image = 1
exclude_images = []
scan_nos = [104]
ids_files =['039.ids']
ph =[13]
hkl = [[-1, 1, 3],[-1,1,3],[-1,1,3]]
#hkl = [4, 0, 4]
#hkl = [5, 1, -1]
frame_prefix="i20180678_2"
boost_mapping = 0
l_scan=True
#is it a potential step scan
pot_step_scan = False
#How is the file saved?
spec_file_head = '/media/qiu/TOSHIBA EXT/P23_I20180678_Jul_2019/raw'
img_path_head = '/media/qiu/TOSHIBA EXT/P23_I20180678_Jul_2019/raw'
#electrochemistry data file path
ids_file_head ='/home/qiu/data/beamtime/P23_11_18_I20180114/ids/I20180014'
motor_angles = dict (zip (['phi','chi','mu','delta','gamma','omega_t'],[0, 0,-30.9, 22.43, 15.4, 0.4 ]))
constant_motors ={'omega_t':0.34, 'phi':0, 'chi':0}

[Fit_setup]
#the small integration window size(num of pix from one side. Smaller more reliable but worse statistics)
#fit boundaries for ip and oop cuts, you need to play with it a bit
#(x0, FWHM, area, lfrac, bg_slope, bg_offset)
#bounds for ip
bounds_ip = [[1.8, 0.0050, 0, 0, -100000, -1e6],[2.8, 0.42, 1e9, 1, 100000, 1e6]]
#bounds for oop
bounds_oop = [[3.2, 0.0050, 0, 0, -100000, -1e6],[3.9, 0.42, 1e9, 1, 100000, 1e6]]
guess_ip = [None, 0.21, 0.1, 0.5, 0, 0]
guess_oop = [None, 0.21, 0.1, 0.5, 0, 0]
#Cut and fit range for two-step peak-fitting processes, 
#First window should be big enough to cover the peak
#The first window use the detector center as the peak center for calculating fit range
#The second fit window use the peak center from the 1st step fit
#cut_offset={'hor':[5,5],'ver':[5,5]}
#data_range_offset={'hor':[80,80],'ver':[80,80]}
cut_offset={'hor':[60,5],'ver':[60,5]}
data_range_offset={'hor':[100,100],'ver':[100,100]}
#use the first run fit results for the ip/oop position?
use_first_fit_for_pos = True

[Mask_point]
#remove abnormal point based on mon counter?
check_abnormality = True
#empirical value to remove abnormal points
#remove range:[max_mon - left_offset, max_mon +right_offset]
left_offset=10
right_offset =100
remove_pix = [[0,0]]
#remove edges
remove_columns = [0,1,2,3,4,5,6,7,8,9,10,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10]
remove_rows =  [0,1,2,3,4,5,6,7,8,9,10,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10]
#equivalent to remove rows with q_ver between these range
remove_q_par = []
#equivalent to remove columns with q_par between these ranges
remove_q_ver = []
#eg line_strike_segments =[{'p1':[2.4,3.0],'p2':[2.55,3.3]},{'p1':[2.1,3.2],'p2'[2.75,3.5]}]
#each list item is a lib of two items with key=p1 and p2 without exception
#each list item define two ends of one line segment
#each point is of form [q_para, q_vert]
line_strike_segments = [{'p1':[2.4,3.2],'p2':[2.5,3.0]},{'p1':[2.4,3.0],'p2':[2.55,3.3]}]
#in pixel unit eg [10,10], make sure the length is the same as line_strike_segments
line_strike_width = []
remove_xy_par = []
#equivalent to remove columns with q_par between these ranges
#remove_q_ver = [[100,120]]
remove_xy_ver = []

[Image_setup]
vmax_2d_img=100
vmin_2d_img=0
plot_live = 1

[Integration_setup]
#center_pix will be determined automatically, no need to change here
rod_scan = 1
check_level = 0.000000000
center_pix = [698,316]
#center_pix = [80,230]
row_width =40
col_width = 60
int_direct = 'x'
#if you want to have a linear bkg subtraction, set this to 1
ord_cus_s = [1]
#ss will be determined by cal the std of bkg region of each profile
ss = [1]
#ss_factor used to cal the ss: ss = std * ss_factor
#higher factor means higher noise level, play with this a bit. 
#the normal range is from 4 to 9
ss_factor = 6
#no need to change the cost function
fct = ['ah','sh','stq','atq'][-1]

[Correction_pars]
#this section is not used at this moment
corr_params = {'scale':1, 'geom':'psic','beam_slits':{'horz':0.06,'vert':1},'det_slits':None, 'sample':{'dia':10,'polygon':[],'angles':[]}}

[Spec_info]
#this section is not used at this moment
cell=[5,5,5,90,90,90]
or0_lib = {'delta':0,'eta':0,'chi':0,'phi':0, 'nu':0,'mu':0,'lam':0.75, 'h':[0,0,1]}
or1_lib = {'delta':0,'eta':0,'chi':0,'phi':0, 'nu':0,'mu':0,'lam':0.75, 'h':[1,0,0]}
n_azt = [0,0,1]
motors = {'delta':0,'eta':0,'chi':0,'phi':0,'nu':0,'mu':0}
mon = {'norm':1,'trams':1}

